////////////////////////////
Application Map
////////////////////////////
Routes:				In Module			router-outlet
	Home			App.module			home/shell.comp
	Websites
	Security		Security.module		app.comp

Module structure:
	app.module
		security.module
		shared.module
		app-routing.module
		
Module details:
	shared:
		CommonModule
		FormsModule
		ReactiveFormsModule
		--------------
		MessageComponent
	security:
		RouterModule, Routes
		SharedModule
		Store, Effects, reducer
		Shared
		--------------
		LoginComponent
		
		
		
	
///////////////////////////////////////////////	
Start over with instructions on how I created NgClientDemoNgRx	
///////////////////////////////////////////////
* create another project
	ng new NgClientDemoNgRx --style=scss	
* install bootstrap	
	npm install --save bootstrap
* got from https://bootswatch.com/cerulean/	
	bootstrap.css.  I renamed it bootstrapCERULEAN.css
	I also have the min, but am using the full for now.
* Moved the styles.scss and ./bootstrapCERULEAN.css files into a scss folder
* Added this to the styles.scss file:
	@import './bootstrapCERULEAN.css';	
* In angular.json:
	"styles": [
		"./src/scss/styles.scss"
	],	
* decided to go with ng-bootstrap (Ngx-bootstrap is different)	
  ng-bootstrap reference:
	https://www.npmjs.com/package/@ng-bootstrap/ng-bootstrap
	npm install --save @ng-bootstrap/ng-bootstrap
	put this in app.module:
	import { NgbModule } from '@ng-bootstrap/ng-bootstrap';
	imports: [
			NgbModule.forRoot()
* navbar (which I won't use ng-bootstrap for) is not working.
  I will add this:
	  "scripts": [
		"./node_modules/bootstrap/dist/js/bootstrap.min.js",
		"./node_modules/jquery/dist/jquery.slim.js"
	]
* still doesn't work, so add jquery:
	npm install jquery
* then added jquery.slip to the scripts array, as above.
* still doesn't work, menu does not drop down
	had to exchange navbar-toggle with navbar-expand
* still doesn't work, found that bootstrap.min.js was giving an error
	so i switched to bootstrap.js, still an error.
* have to change the order of the scripts listed to this:
  now navbar works	
	"scripts": [
		"./node_modules/jquery/dist/jquery.slim.js",
		"./node_modules/bootstrap/dist/js/bootstrap.js"
	]	
* moved in all the files from previous broken version
* installed ngrx:
	npm install @ngrx/store
	npm install @ngrx/effects
* installed font awesome
	npm install --save font-awesome angular-font-awesome
	
* installed debugger for ngrx
	npm install @ngrx/store-devtools
* install currency mask
	npm install ng2-currency-mask --save
* install bootbox	
	I installed/uninstalled this, Because I had used bootbox not ngbootbox
	npm install ngbootbox
	npm uninstall ngbootbox	
	//used this:
	npm i bootbox
	//then got the file from http://bootboxjs.com/ and put it in assets
		
* use ng-bootstrap for new datepicker
	https://ng-bootstrap.github.io/#/components/datepicker/overview	
* confirm what's been installed:	
		npm list --depth=0 	
		+-- @angular-devkit/build-angular@0.6.8
		+-- @angular/animations@6.1.0
		+-- @angular/cli@6.0.8
		+-- @angular/common@6.1.0
		+-- @angular/compiler@6.1.0
		+-- @angular/compiler-cli@6.1.0
		+-- @angular/core@6.1.0
		+-- @angular/forms@6.1.0
		+-- @angular/http@6.1.0
		+-- @angular/language-service@6.1.0
		+-- @angular/platform-browser@6.1.0
		+-- @angular/platform-browser-dynamic@6.1.0
		+-- @angular/router@6.1.0
		+-- @ng-bootstrap/ng-bootstrap@2.2.1
		+-- @ngrx/effects@6.0.1
		+-- @ngrx/store@6.0.1
		+-- @ngrx/store-devtools@6.0.1
		+-- @types/jasmine@2.8.8
		+-- @types/jasminewd2@2.0.3
		+-- @types/node@8.9.5
		+-- angular-font-awesome@3.1.2
		+-- bootbox@4.4.0
		+-- bootstrap@4.1.3
		+-- codelyzer@4.2.1
		+-- core-js@2.5.7
		+-- font-awesome@4.7.0
		+-- jasmine-core@2.99.1
		+-- jasmine-spec-reporter@4.2.1
		+-- jquery@3.3.1
		+-- karma@1.7.1
		+-- karma-chrome-launcher@2.2.0
		+-- karma-coverage-istanbul-reporter@2.0.1
		+-- karma-jasmine@1.1.2
		+-- karma-jasmine-html-reporter@0.2.2
		+-- ng2-currency-mask@5.3.1
		+-- UNMET PEER DEPENDENCY popper.js@^1.14.3
		+-- protractor@5.3.2
		+-- rxjs@6.2.2
		+-- ts-node@5.0.1
		+-- tslint@5.9.1
		+-- typescript@2.7.2
		`-- zone.js@0.8.26	
		
	Decided not to use ngbootstrap datepicker because it is not developer-friendly.
* installed  a2e-datetimepicker and used that.	
	https://www.npmjs.com/package/ng2-eonasdan-datetimepicker
	//have to install moment too
	npm install ng2-eonasdan-datetimepicker --save
	npm install moment --save
            "styles": [
                "./node_modules/font-awesome/css/font-awesome.css",
                "./src/scss/styles.scss",
                "./node_modules/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css"
            ],
            "scripts": [
                "./node_modules/jquery/dist/jquery.slim.js",
                "./node_modules/bootstrap/dist/js/bootstrap.js",
                "./src/assets/bootbox.min.js",
                "./node_modules/moment/min/moment.min.js",
                "./node_modules/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js"
            ]	
	websites.module:
	import {A2Edatetimepicker} from 'ng2-eonasdan-datetimepicker';
	imports: [ A2Edatetimepicker,
* a2e-datetimepicker Not working in bootstrap 4. uninstalled it
	npm uninstall a2e-datetimepicker --save	
* install the same datepicker for bootstrap 4
	have to wrap the input that contains this datepicker inside a row or won't popup in correct position.
	https://github.com/fetrarij/ngx-tempusdominus-bootstrap	
	https://fetrarij.github.io/ngx-tempusdominus-bootstrap/
	npm install tempusdominus-core tempusdominus-bootstrap-4 --save
	npm install ngx-tempusdominus-bootstrap --save
	import { NgTempusdominusBootstrapModule } from 'ngx-tempusdominus-bootstrap';
	  imports: [
		NgTempusdominusBootstrapModule	
\\\\\\\\\\\\\\\\\
create new feature: createAccount
\\\\\\\\\\\\\\\\\
8/2  start 9:00 am -12
12:30 - 4:00
8/3 start 8:30

	* add link to login component
	* add route to CreateAccountComponent
	* create CreateAccountComponent.ts
	* create CreateAccountComponent.html form
		firstName, lastName, street1, street2, city, state, country, zip
	* update effect doLogin so that account is returned.		
	* update user.service doLogin so that account is returned.
	* update menu component to set	Hi FirstName
* update menu to log out	
	* create a clear current account action
	* update IUser, remove user profile
	* Add getUserProfile function to IAccount	
	* create IAccount
	* Update reducer with IAccount instead of IUserProfile, get rid of iUserProfile 
		getUserProfile = getUserAccount
	* Update action LoginSuccess to return IAccount	
	* Update login effect
	* createAccount in user.service	
	* 3 new actions
		-CreateAccount
		-CreateAccountSuccess
		-CreateAccountFail
	* 1 effect
	-createAccount

	* 2 new reducer switch cases
	* create service to get regions for a country
	* move createaccount to app.module

on api:  
	* add columns to the database users table
		accountID, firstName, lastName, street1, street2, city, state, country, zip
	* create UserAccount object in models
		accountID, firstName, lastName, street1, street2, city, state, country, zip
	* create in DAL addNewAccount.cs
		will add UserAccount to the database.
	* create in DAL getUserInfo.cs
		will get UserAccount from database user username and password.	
	* update login in UserController.cs the Post action
	-	If log in successfully, then return new UserAccount Object
	-    change it to a put so create can be a post
	* update login in UserController.cs the Post action
	- change it to create a new account. 	
	* add createAcct in UserController.cs the Post action	
		it will call createAccount, if successful, will return the object.		
	* add getRegions in UserController to return states or provinces

* local publish to new NgApiDemo

////////////////////////////
Start OUT
Need to move the login component to app.module
////////////////////////////
* rename and move user ngrx files 
	admin.reducer.ts
	admin.actions.ts
	admin.effects.ts
* add createaccount to admin ngrx
4 actions
  CreateUser  in IAccount, out ICurrentUser
  CreateUserSuccess
  CreateUserFail
  ClearCurrentUser  
0 select
3 reducer switch
1 effect  
////////////////////////////
end OUT
////////////////////////////

////////////////////////////
Rename the login module to Security module
////////////////////////////
	
